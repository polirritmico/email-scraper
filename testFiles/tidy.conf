########################################################
## Tidy Config File

## Diagnostics Options Reference
force-output: yes
## Encoding Options Reference
char-encoding: utf8



########################################################
## Document Display Options Reference

# When enabled, this option limits Tidy's non-document output to report only document warnings and errors.
quiet: yes

# This option specifies the number Tidy uses to determine if further errors should be shown. If set to 0, then no errors are shown.
show-errors: 0

# This option specifies if Tidy should display info-level messages.
show-info: no

# This option specifies if Tidy should suppress warnings. This can be useful when a few errors are hidden in a flurry of warnings.
show-warnings: no



########################################################
## Document In and Out Options Reference

# This option specifies the DOCTYPE declaration generated by Tidy.
# omit: The output won't contain a DOCTYPE declaration. Note this this also implies numeric-entities is set to yes.
# html5: The DOCTYPE is set to <!DOCTYPE html>.
# auto: (the default) Tidy will use an educated guess based upon the contents of the document. Note that selecting this option will not change the current document's DOCTYPE on output.
# strict: Tidy will set the DOCTYPE to the HTML4 or XHTML1 strict DTD.
# loose: the DOCTYPE is set to the HTML4 or XHTML1 loose (transitional) DTD.
# Alternatively, you can supply a string for the formal public identifier (FPI). For example: doctype: "-//ACME//DTD HTML 3.14159//EN"
doctype: auto

# This option specifies if Tidy should generate pretty printed output, writing it as HTML.
output-html: yes



########################################################
## Cleanup Options Reference

# This option specifies if Tidy should discard empty paragraphs.
drop-empty-paras: yes

# This option specifies if Tidy should preserve well-formed entities as found in the input.
preserve-entities: no

# This option specifies if Tidy should output unadorned & characters as &amp;.
quote-ampersand: no

# This option specifies if Tidy should output non-breaking space characters as entities, rather than as the Unicode character value 160 (decimal).
quote-nbsp: no

# Repair Options Reference

# This option specifies the default alt= text Tidy uses for <img> attributes when the alt= attribute is missing.
alt-text: img

# This option controls the deletion or addition of the name attribute in elements where it can serve as anchor.
# If set to yes a name attribute, if not already existing, is added along an existing id attribute if the DTD allows it.
# If set to no any existing name attribute is removed if an id attribute exists or has been added.
anchor-as-name: no

# This option specifies if Tidy should coerce a start tag into an end tag in cases where it looks like an end tag was probably intended; for example, given
# <span>foo <b>bar<b> baz</span> Tidy will output <span>foo <b>bar</b> baz</span>
coerce-endtags: no

# This option specifies if Tidy should enclose any text it finds in the body element within a <p> element. This is useful when you want to take existing HTML and use it with a style sheet.
enclose-text: no

# This option causes items that look like closing tags, like </g to be escaped to <\/g. Set this option to no if you do not want this.
escape-scripts: no

# This option specifies if Tidy should replace unexpected hyphens with = characters when it comes across adjacent hyphens. The default is auto will which will act as no for HTML5 document types, and yes for all other document types.
# HTML has abandonded SGML comment syntax, and allows adjacent hypens for all versions of HTML, although XML and XHTML do not. If you plan to support older browsers that require SGML comment syntax, then consider setting this value to yes.
fix-bad-comments: auto

# This option specifies if Tidy should move all style tags to the head of the document.
fix-style-tags: yes

# This option specifies if Tidy should check attribute values that carry URIs for illegal characters and if such are found, escape them as HTML4 recommends.
fix-uri: yes

# This option specifies how Tidy deals with whitespace characters within attribute values.
# If the value is no Tidy normalizes attribute values by replacing any newline or tab with a single space, and further by replacing any contiguous whitespace with a single space.
# To force Tidy to preserve the original, literal values of all attributes and ensure that whitespace within attribute values is passed through unchanged, set this option to yes.
literal-attributes: no

# This option specifies if Tidy should convert the value of an attribute that takes a list of predefined values to lower case. This is required for XHTML documents.
lower-literals: yes

# This option specifies if Tidy should keep the first or last attribute, if an attribute is repeated, e.g. has two align attributes.
repeated-attributes: keep-last

# This option specifies that Tidy should skip nested tags when parsing script and style data.
skip-nested: no

# This options ensures that tags and attributes are applicable for the version of HTML that Tidy outputs. When set to yes and the output document type is a strict doctype, then Tidy will report errors. If the output document type is a loose or transitional doctype, then Tidy will report warnings. Additionally if drop-proprietary-attributes is enabled, then not applicable attributes will be dropped, too.
# When set to no, these checks are not performed.
strict-tags-attributes: no



########################################################
## Transformation Options Reference

# This option specifies if Tidy should print out comments.
hide-comments: no

# This option specifies if Tidy should combine styles to generate a single, new style if multiple style values are detected on an element.
join-styles: yes

# This option specifies if Tidy should merge nested <b> and <i> elements; for example, for the case
# <b class="rtop-2">foo <b class="r2-2">bar</b> baz</b>, Tidy will output <b class="rtop-2">foo bar baz</b>.
merge-emphasis: no



########################################################
## Pretty Print Options Reference

# This option specifies if Tidy should output a line break before each <br> element.
break-before-br: no

# This option specifies if Tidy should indent block-level tags.
# If set to auto Tidy will decide whether or not to indent the content of tags such as <title>, <h1>-<h6>, <li>, <td>, or <p> based on the content including a block-level element. Setting indent to yes can expose layout bugs in some browsers.
# Use the option indent-spaces to control the number of spaces or tabs output per level of indent, and indent-with-tabs to specify whether spaces or tabs are used.
# Values: no, yes, auto
indent: yes

# This option specifies the number of spaces or tabs that Tidy uses to indent content when indent is enabled.
# Note that the default value for this option is dependent upon the value of indent-with-tabs (see also).
indent-spaces: 2

# This option specifies if Tidy should indent with tabs instead of spaces, assuming indent is yes. Set it to yes to indent using tabs instead of the default spaces. Use the option indent-spaces to control the number of tabs output per level of indent. Note that when indent-with-tabs is enabled the default value of indent-spaces is reset to 1.
# Note tab-size controls converting input tabs to spaces. Set it to zero to retain input tabs.
indent-with-tabs: no

# With the default no Tidy will replace all source tabs with spaces, controlled by the option tab-size, and the current line offset. Of course, except in the special blocks/elements enumerated below, this will later be reduced to just one space.
# If set yes this option specifies Tidy should keep certain tabs found in the source, but only in preformatted blocks like <pre>, and other CDATA elements like <script>, <style>, and other pseudo elements like <?php ... ?>. As always, all other tabs, or sequences of tabs, in the source will continue to be replaced with a space.
keep-tabs: no

# This option specifies the number of columns that Tidy uses between successive tab stops. It is used to map tabs to spaces when reading the input.
tab-size: 8

# This option specifies if Tidy should add a meta element to the document head to indicate that the document has been tidied. Tidy won't add a meta element if one is already present.
tidy-mark: no

# This option specifies if Tidy should add some extra empty lines for readability. The default is no. If set to auto Tidy will eliminate nearly all newline characters. no, yes, auto.
vertical-space: no

# This option specifies the right margin Tidy uses for line wrapping. Tidy tries to wrap lines so that they do not exceed this length. Set wrap to 0 (zero) if you want to disable line wrapping.
wrap: 0

# This option specifies if Tidy should line wrap text contained within ASP pseudo elements, which look like: <% ... %>.
wrap-asp: no

# This option specifies if Tidy should line-wrap attribute values, meaning that if the value of an attribute causes a line to exceed the width specified by wrap, Tidy will add one or more line breaks to the value, causing it to be wrapped into multiple lines.
# Note that this option can be set independently of wrap-script-literals. By default Tidy replaces any newline or tab with a single space and replaces any sequences of whitespace with a single space.
# To force Tidy to preserve the original, literal values of all attributes, and ensure that whitespace characters within attribute values are passed through unchanged, set literal-attributes to yes.
wrap-attributes: no

# This option specifies if Tidy should line wrap text contained within JSTE pseudo elements, which look like: <# ... #>.
wrap-jste: yes

# This option specifies if Tidy should line wrap text contained within PHP pseudo elements, which look like: <?php ... ?>.
wrap-php: yes

# This option specifies if Tidy should line wrap string literals that appear in script attributes.
# Tidy wraps long script string literals by inserting a backslash character before the line break.
wrap-script-literals: no

# This option specifies if Tidy should line wrap text contained within <![ ... ]> section tags.
wrap-sections: yes
